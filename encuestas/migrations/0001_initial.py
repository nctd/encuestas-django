# Generated by Django 3.2.3 on 2022-05-16 00:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('es_empresa', models.BooleanField(default=False)),
                ('es_alumno', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='alumnoCursoModel',
            fields=[
                ('alumno_curso_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'alumno_curso',
                'db_table': 'alumno_curso',
            },
        ),
        migrations.CreateModel(
            name='cursoModel',
            fields=[
                ('curso_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_curso', models.CharField(max_length=300)),
                ('fecha_inicio', models.DateField()),
                ('fecha_termino', models.DateField()),
                ('resp_exsol', models.CharField(max_length=300)),
                ('contrato', models.CharField(max_length=100)),
                ('req_servicio', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name': 'curso',
                'db_table': 'curso',
            },
        ),
        migrations.CreateModel(
            name='encuestaAlumnoModel',
            fields=[
                ('encuesta_alumno_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=150)),
                ('fecha_creacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'EncuestaAlumno',
                'db_table': 'encuesta_alumno',
            },
        ),
        migrations.CreateModel(
            name='encuestaSatisfaccionModel',
            fields=[
                ('encuesta_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=150)),
                ('fecha_creacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'EncuestaSatisfaccion',
                'db_table': 'Encuesta_Satisfaccion',
            },
        ),
        migrations.CreateModel(
            name='respuestaSatisfaccionModel',
            fields=[
                ('respuesta_id', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.CharField(max_length=250)),
                ('respuesta_texto', models.CharField(blank=True, default='0', max_length=250)),
                ('respuesta_valor', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('fecha_respuesta', models.DateTimeField(auto_now=True)),
                ('orden_respuesta', models.IntegerField()),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.cursomodel')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.encuestasatisfaccionmodel')),
            ],
            options={
                'verbose_name': 'RespuestaSatisfaccion',
                'db_table': 'respuesta_satisfaccion',
            },
        ),
        migrations.CreateModel(
            name='respuestaAlumnoModel',
            fields=[
                ('respuesta_id', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.CharField(max_length=250)),
                ('respuesta_texto', models.CharField(blank=True, default='0', max_length=250)),
                ('respuesta_valor', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('fecha_respuesta', models.DateTimeField(auto_now=True)),
                ('orden_respuesta', models.IntegerField()),
                ('alumno_curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.alumnocursomodel')),
                ('encuesta_alumno', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='encuestas.encuestaalumnomodel')),
            ],
            options={
                'verbose_name': 'RespuestaAlumno',
                'db_table': 'respuesta_alumno',
            },
        ),
        migrations.CreateModel(
            name='preguntaSatisfaccionModel',
            fields=[
                ('pregunta_id', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.CharField(max_length=250)),
                ('valor', models.CharField(max_length=250)),
                ('orden', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.encuestasatisfaccionmodel')),
            ],
            options={
                'verbose_name': 'PreguntaSatisfaccion',
                'db_table': 'Pregunta_Satisfaccion',
            },
        ),
        migrations.CreateModel(
            name='preguntaAlumnoModel',
            fields=[
                ('pregunta_id', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.CharField(max_length=250)),
                ('valor', models.CharField(max_length=250)),
                ('orden', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('encuesta_curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.encuestaalumnomodel')),
            ],
            options={
                'verbose_name': 'PreguntaAlumno',
                'db_table': 'pregunta_alumno',
            },
        ),
        migrations.CreateModel(
            name='empresaModel',
            fields=[
                ('empresa_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_empresa', models.CharField(max_length=300)),
                ('nombre_responsable', models.CharField(max_length=300)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'empresa',
                'db_table': 'empresa',
            },
        ),
        migrations.AddField(
            model_name='cursomodel',
            name='empresa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='encuestas.empresamodel'),
        ),
        migrations.CreateModel(
            name='cursoEncuestaSatisfaccionModel',
            fields=[
                ('curso_encuesta_id', models.AutoField(primary_key=True, serialize=False)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.cursomodel')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.encuestasatisfaccionmodel')),
            ],
            options={
                'verbose_name': 'curso_encuesta_satisfaccion',
                'db_table': 'curso_encuesta_satisfaccion',
            },
        ),
        migrations.CreateModel(
            name='cursoEncuestaAlumnoModel',
            fields=[
                ('curso_encuesta_alumno_id', models.AutoField(primary_key=True, serialize=False)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.cursomodel')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.encuestaalumnomodel')),
            ],
            options={
                'verbose_name': 'curso_encuesta_alumno',
                'db_table': 'curso_encuesta_alumno',
            },
        ),
        migrations.CreateModel(
            name='alumnoModel',
            fields=[
                ('alumno_id', models.AutoField(primary_key=True, serialize=False)),
                ('rut', models.CharField(max_length=10, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('a_paterno', models.CharField(max_length=150)),
                ('a_materno', models.CharField(max_length=150)),
                ('correo', models.CharField(max_length=150)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'alumno',
                'db_table': 'alumno',
            },
        ),
        migrations.AddField(
            model_name='alumnocursomodel',
            name='alumno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.alumnomodel'),
        ),
        migrations.AddField(
            model_name='alumnocursomodel',
            name='curso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encuestas.cursomodel'),
        ),
    ]
